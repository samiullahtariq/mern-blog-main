import Comment from"../models/comment.model.js";export const createComment=async(t,e,n)=>{try{const{content:o,postId:s,userId:r}=t.body;if(r!==t.user.id)return n(errorHandler(403,"You are not allowed to create this comment"));const m=new Comment({content:o,postId:s,userId:r});await m.save(),e.status(200).json(m)}catch(t){n(t)}};export const getPostComments=async(t,e,n)=>{try{const o=await Comment.find({postId:t.params.postId}).sort({createdAt:-1});e.status(200).json(o)}catch(t){n(t)}};export const likeComment=async(t,e,n)=>{try{const o=await Comment.findById(t.params.commentId);if(!o)return n(errorHandler(404,"Comment not found"));const s=o.likes.indexOf(t.user.id);-1===s?(o.numberOfLikes+=1,o.likes.push(t.user.id)):(o.numberOfLikes-=1,o.likes.splice(s,1)),await o.save(),e.status(200).json(o)}catch(t){n(t)}};export const editComment=async(t,e,n)=>{try{const o=await Comment.findById(t.params.commentId);if(!o)return n(errorHandler(404,"Comment not found"));if(o.userId!==t.user.id&&!t.user.isAdmin)return n(errorHandler(403,"You are not allowed to edit this comment"));const s=await Comment.findByIdAndUpdate(t.params.commentId,{content:t.body.content},{new:!0});e.status(200).json(s)}catch(t){n(t)}};export const deleteComment=async(t,e,n)=>{try{const o=await Comment.findById(t.params.commentId);if(!o)return n(errorHandler(404,"Comment not found"));if(o.userId!==t.user.id&&!t.user.isAdmin)return n(errorHandler(403,"You are not allowed to delete this comment"));await Comment.findByIdAndDelete(t.params.commentId),e.status(200).json("Comment has been deleted")}catch(t){n(t)}};export const getcomments=async(t,e,n)=>{if(!t.user.isAdmin)return n(errorHandler(403,"You are not allowed to get all comments"));try{const o=parseInt(t.query.startIndex)||0,s=parseInt(t.query.limit)||9,r="desc"===t.query.sort?-1:1,m=await Comment.find().sort({createdAt:r}).skip(o).limit(s),a=await Comment.countDocuments(),d=new Date,c=new Date(d.getFullYear(),d.getMonth()-1,d.getDate()),i=await Comment.countDocuments({createdAt:{$gte:c}});e.status(200).json({comments:m,totalComments:a,lastMonthComments:i})}catch(t){n(t)}};